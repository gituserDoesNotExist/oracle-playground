CREATE OR REPLACE TYPE "PLAYGROUND"."SUB_SOLUTION" 
  AUTHID DEFINER
  AS
  OBJECT (BEST_VALUE NUMBER(19),
          ITEMS PLAYGROUND.ITEMS,
          MEMBER FUNCTION GET_BEST_VALUE
            RETURN NUMBER,
          MEMBER PROCEDURE SET_BEST_VALUE(SELF       IN OUT NOCOPY PLAYGROUND.SUB_SOLUTION,
                                          BEST_VALUE IN            NUMBER),
          MEMBER FUNCTION GET_ITEMS
            RETURN PLAYGROUND.ITEMS,
          CONSTRUCTOR FUNCTION SUB_SOLUTION(BEST_VALUE NUMBER,
                                            ITEMS      PLAYGROUND.ITEMS)
            RETURN SELF AS RESULT);
/
CREATE OR REPLACE TYPE BODY "PLAYGROUND"."SUB_SOLUTION" 
  AS

    CONSTRUCTOR FUNCTION SUB_SOLUTION(BEST_VALUE NUMBER,
                                      ITEMS      PLAYGROUND.ITEMS)
      RETURN SELF AS RESULT
      IS
      BEGIN
        SELF.BEST_VALUE := BEST_VALUE;
        SELF.ITEMS := ITEMS;
        RETURN;
      END;

    MEMBER FUNCTION GET_BEST_VALUE
      RETURN NUMBER
      AS
      BEGIN
        RETURN SELF.BEST_VALUE;
      END GET_BEST_VALUE;

    MEMBER PROCEDURE SET_BEST_VALUE(SELF       IN OUT NOCOPY PLAYGROUND.SUB_SOLUTION,
                                    BEST_VALUE IN            NUMBER)
      AS
      BEGIN
        SELF.BEST_VALUE := BEST_VALUE;
      END SET_BEST_VALUE;

    MEMBER FUNCTION GET_ITEMS
      RETURN PLAYGROUND.ITEMS
      AS
        TEST_IT PLAYGROUND.INTEGER_ARRAY := PLAYGROUND.INTEGER_ARRAY(1, 2, 3);
      BEGIN
        RETURN SELF.ITEMS;
      END GET_ITEMS;

  END;
/
