CREATE OR REPLACE PACKAGE BODY "PLAYGROUND"."TEST_ALL_KNAPSACK" 
  AS
  N_VALUE_SUB_SOLUTION NUMBER(19) := 100;
  N_WEIGHT NUMBER(19) := 10;
  N_VALUE_ITEM NUMBER(19) := 2;
  ITEM PLAYGROUND.ITEM := NEW PLAYGROUND.ITEM(N_WEIGHT, N_VALUE_ITEM);
  ITEMS PLAYGROUND.ITEMS := PLAYGROUND.ITEMS(ITEM);

  PROCEDURE TEST_SUB_SOLUTION_CREATE
    AS
      TEST_CANDIDATE PLAYGROUND.SUB_SOLUTION;
      EXPECTED_ITEMS PLAYGROUND.ITEMS := PLAYGROUND.ITEMS();
    BEGIN
      TEST_CANDIDATE := NEW PLAYGROUND.SUB_SOLUTION(N_VALUE_SUB_SOLUTION, ITEMS);

      UT.EXPECT(TEST_CANDIDATE.GET_BEST_VALUE()).to_equal(N_VALUE_SUB_SOLUTION);

      TEST_CANDIDATE.SET_BEST_VALUE(29);
      UT.EXPECT(TEST_CANDIDATE.GET_BEST_VALUE()).to_equal(29);

    END TEST_SUB_SOLUTION_CREATE;

-- #########################################################################################################


  PROCEDURE TEST_GET_BEST_VALUE
    AS
      N_RES                   NUMBER;
      N_MAX_KNAPSACK_CAPACITY NUMBER           := 10;

      ITEM1                   PLAYGROUND.ITEM  := NEW PLAYGROUND.ITEM(5, 10);
      ITEM2                   PLAYGROUND.ITEM  := NEW PLAYGROUND.ITEM(4, 40);
      ITEM3                   PLAYGROUND.ITEM  := NEW PLAYGROUND.ITEM(6, 30);
      ITEM4                   PLAYGROUND.ITEM  := NEW PLAYGROUND.ITEM(3, 50);
      ITEMS                   PLAYGROUND.ITEMS := PLAYGROUND.ITEMS(ITEM1, ITEM2, ITEM3, ITEM4);
    BEGIN
      N_RES := PLAYGROUND.KNAPSACK.GET_BEST_VALUE(ITEMS, N_MAX_KNAPSACK_CAPACITY);

      DBMS_OUTPUT.PUT_LINE(GREATEST(1, 40));

      UT.EXPECT(N_RES).to_equal(90);
    END TEST_GET_BEST_VALUE;



END TEST_ALL_KNAPSACK;
/
